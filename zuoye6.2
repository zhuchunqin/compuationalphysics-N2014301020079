class adiabatic_process(cannon_shell):
    def calculate(self):
        _time=0
        while (self.y[-1]>=self.y[0]):
            self.vx.append(self.vx[-1]-(1-self.aT0*self.y[-1])^self.b*self.Bm*self.v1[-1]*(self.vx[-1]-self.v_wind)*self.dt)
            self.vy.append(self.vy[-1]-self.g*self.dt-(1-self.aT0*self.y[-1])^self.b*self.Bm*self.v1[-1]*self.vy[-1]*self.dt)
            self.x.append(self.x[-1]+self.vx[-1]*self.dt)
            self.y.append(self.y[-1]+self.vy[-1]*self.dt)
            self.t.append(_time)
            _time +=self.dt
      for i in range(len(self.x)):
		    if(14000<=self.x[i]<=14000):
			    self.x[-1]=self.x[i]
				self.y[-1]=self.y_target
	def show_results(self,color):
        pl.plot(self.x,self.y,label='theta='+str(self.theta))
        pl.plot(self.x_target,self.y_target,'b*',linewidth='10')
        pl.title('Trajectory of cannon shell with air drag and density')
        pl.xlabel('x(m)')
        pl.ylabel('y(m)')
        pl.xlim(0,25000)
        pl.ylim(0,10000)
        pl.legend(loc='best',prop={'size':12})
a=cannon_shell()
a.calculate()
a.show_results('r')
a=cannon_shell(v0=700,time_step=0.5,theta=35,g=9.8,aT0=0.0000218,b=2.5,c=0.5,Bm=0.00004)
a.calculate()
a.show_results('r')
a=cannon_shell(v0=700,time_step=0.5,theta=40,g=9.8,aT0=0.0000218,b=2.5,c=0.5,Bm=0.00004)
a.calculate()
a.show_results('r')
a=cannon_shell(v0=700,time_step=0.5,theta=45,g=9.8,aT0=0.0000218,b=2.5,c=0.5,Bm=0.00004)
a.calculate()
a.show_results('r')
a=cannon_shell(v0=700,time_step=0.5,theta=50,g=9.8,aT0=0.0000218,b=2.5,c=0.5,Bm=0.00004)
a.calculate()
a.show_results('r')
a=cannon_shell(v0=700,time_step=0.5,theta=55,g=9.8,aT0=0.0000218,b=2.5,c=0.5,Bm=0.00004)
a.calculate()
a.show_results('r')
pl.show()
